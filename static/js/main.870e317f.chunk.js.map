{"version":3,"sources":["App.js","Calculator_Screen.jsx","Calculator_Button.js","Calculator_Body.js","serviceWorker.js","index.js"],"names":["dps","App","props","_this","Object","_Users_jonbrown_Documents_GitHub_react_calculator_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_jonbrown_Documents_GitHub_react_calculator_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_jonbrown_Documents_GitHub_react_calculator_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","buttonOnClick","e","numRegex","numberSelected","test","target","value","newValue","calcString","state","screenValue","numberSelectedLast","String","action","setState","calcValue","parseFloat","eval","toFixed","id","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","className","style","height","md","size","offset","_Calculator_Screen__WEBPACK_IMPORTED_MODULE_8__","_Calculator_Body__WEBPACK_IMPORTED_MODULE_9__","onClick","Component","__webpack_require__","d","__webpack_exports__","Calculator_Screen","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Calculator_Button","react_default","Calculator_Body_Calculator_Body","Calculator_Body","Fragment","reactstrap_es","noGutters","sm","xs","Calculator_Button_Calculator_Button","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.870e317f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Container, Row, Col} from 'reactstrap';\n//import logo from './logo.svg';\nimport './App.css';\nimport {Calculator_Screen} from './Calculator_Screen';\nimport {Calculator_Body} from './Calculator_Body';\n\nconst dps = 8;\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      screenValue: 0,\n      calcString: \"\",\n      action: null,\n      numberSelectedLast: false\n    };\n  }\n\n  buttonOnClick = e => {\n    const numRegex = /\\d|\\./;\n    let numberSelected = numRegex.test(e.target.value);//true for numbers and \".\"\n    if(/\\./.test(this.state.screenValue) & e.target.value === \".\"){numberSelected = false} //override number selected if . already selected\n\n    let newValue, calcString;\n    if(numberSelected) {\n      if (!this.state.numberSelectedLast){\n        newValue = (e.target.value === \".\") ? \"0.\" : e.target.value; //deal with selecting . first\n        if(this.state.action){\n          calcString = this.state.calcString + this.state.action;\n          this.setState({\n            calcString: calcString\n          });\n        }  \n      } else {\n        newValue = String(this.state.screenValue) + String(e.target.value);\n      }\n      this.setState({\n        numberSelectedLast: true,\n        screenValue: newValue\n      });\n\n    } else if (e.target.value === \"=\") {\n      const calcValue = parseFloat(eval(this.state.calcString + this.state.screenValue).toFixed(dps));\n      this.setState({\n        numberSelectedLast: false,\n        screenValue: calcValue,\n        calcString: String(calcValue),\n        action: null\n      });\n\n    } else if (e.target.id === \"clear\") {\n      this.setState({\n        numberSelectedLast: false,\n        screenValue: 0,\n        calcString: \"\",\n        action: null\n      });\n      \n    } else {\n      const numberSelectedLast = this.state.numberSelectedLast;\n      newValue = numberSelectedLast? parseFloat(eval(this.state.calcString + String(this.state.screenValue)).toFixed(dps)): this.state.screenValue;\n      this.setState({\n        numberSelectedLast: false,\n        action: e.target.value,\n        screenValue: newValue,\n        calcString: newValue\n      });\n    }\n  }\n  \n  render() {\n    return (\n        <Container className=\"App\">\n              <Row style={{height:30}}/>\n              <Row>\n                <Col md={{ size: 4, offset: 4 }}>\n                  <Calculator_Screen id=\"display\" value={this.state.screenValue}/>\n                </Col>\n              </Row>\n              <Row>\n                <Col md={{ size: 4, offset: 4 }}>\n                  <Calculator_Body onClick={this.buttonOnClick}/>\n                </Col>\n              </Row>\n        </Container>\n    );\n  }\n}","import React from 'react';\n\nexport const Calculator_Screen = props => {\n    return <div className=\"screen\">{props.value}</div>\n}","import React from 'react';\n\nexport const Calculator_Button = props => {\n    return <button onClick={props.onClick} id={props.id} value={props.value} style={props.style}>\n            {props.value}\n        </button>\n}  \n","import React from 'react';\nimport {Row, Col} from 'reactstrap';\nimport {Calculator_Button} from './Calculator_Button';\n\nexport const Calculator_Body = props => {\n    //create a grid for all numbers\n    return <>\n            <Row noGutters>\n                <Col sm=\"9\">\n                    <Row noGutters> \n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"one\" value=\"1\" onClick={props.onClick} />\n                        </Col>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"two\" value=\"2\" onClick={props.onClick} />\n                        </Col>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"three\" value=\"3\" onClick={props.onClick} />\n                        </Col>\n                    </Row>\n                    <Row noGutters>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"four\" value=\"4\" onClick={props.onClick} />\n                        </Col>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"five\" value=\"5\" onClick={props.onClick} />\n                        </Col>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"six\" value=\"6\" onClick={props.onClick} />\n                        </Col>\n                    </Row>\n                    <Row noGutters>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"seven\" value=\"7\" onClick={props.onClick} />\n                        </Col>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"eight\" value=\"8\" onClick={props.onClick} />\n                        </Col>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"nine\" value=\"9\" onClick={props.onClick} />\n                        </Col>\n                    </Row>\n                    <Row noGutters>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"zero\" value=\"0\" onClick={props.onClick} />\n                        </Col>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"decimal\" value=\".\" onClick={props.onClick} />\n                        </Col>\n                        <Col xs=\"4\">\n                            <Calculator_Button id=\"equals\" value=\"=\" onClick={props.onClick} style={{backgroundColor:\"dodgerblue\"}} />\n                        </Col>\n                    </Row>\n                </Col>\n                <Col sm=\"3\">\n                    <Calculator_Button id=\"add\" value=\"+\" onClick={props.onClick} style={{backgroundColor:\"lightgrey\"}}/>\n                    <Calculator_Button id=\"subtract\" value=\"-\" onClick={props.onClick} style={{backgroundColor:\"lightgrey\"}} />\n                    <Calculator_Button id=\"multiply\" value=\"*\" onClick={props.onClick} style={{backgroundColor:\"lightgrey\"}} />\n                    <Calculator_Button id=\"divide\" value=\"/\" onClick={props.onClick} style={{backgroundColor:\"lightgrey\"}} />\n                    <Calculator_Button id=\"clear\" value=\"AC\" onClick={props.onClick} style={{backgroundColor:\"red\"}} />\n                </Col>\n            </Row> \n        </>\n}  \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}